diff --git a/multicast_kernel/multi_client/kmod/multic_nf.c b/multicast_kernel/multi_client/kmod/multic_nf.c
index 69329e4..ff9c91b 100644
--- a/multicast_kernel/multi_client/kmod/multic_nf.c
+++ b/multicast_kernel/multi_client/kmod/multic_nf.c
@@ -21,11 +21,13 @@ void get_all_multi_packets_stats(struct multic_packets_stats_st *stats)
 }
 
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
-unsigned int tmcc_hook_local_in(unsigned int hook, struct sk_buff **pskb, 
+static unsigned int tmcc_hook_local_in(unsigned int hook, struct sk_buff **pskb, 
    const struct net_device *in,const struct net_device *out, int (*okfn)(struct sk_buff *))
-#else
-unsigned int tmcc_hook_local_in(unsigned int hook, struct sk_buff *skb, 
+#elif  LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
+static unsigned int tmcc_hook_local_in(unsigned int hook, struct sk_buff *skb, 
    const struct net_device *in,const struct net_device *out, int (*okfn)(struct sk_buff *))
+#else
+static unsigned int tmcc_hook_local_in(void *priv, struct sk_buff *skb, const struct nf_hook_state *state)
 #endif
 {
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
@@ -93,7 +95,9 @@ unsigned int tmcc_hook_local_in(unsigned int hook, struct sk_buff *skb,
 static struct nf_hook_ops multi_ops[] __read_mostly = {
     {
         .hook           = tmcc_hook_local_in,
+#if  LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
         .owner          = THIS_MODULE,
+#endif
         .pf             = PF_INET,
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
         .hooknum        = NF_IP_PRE_ROUTING,
diff --git a/multicast_kernel/multi_client/kmod/multic_nl.c b/multicast_kernel/multi_client/kmod/multic_nl.c
index 2a9f75e..b9208d0 100644
--- a/multicast_kernel/multi_client/kmod/multic_nl.c
+++ b/multicast_kernel/multi_client/kmod/multic_nl.c
@@ -193,14 +193,13 @@ static void tmcc_rcv_sock(struct sock *sk, int len)
 int multi_nl_init(void)
 {
     /*netlink varies greatly in different kernel version, so in fact we only cover 2.6.32 and 3.10 kernel version.*/
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0) 
-    /*
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,0,0) 
     struct netlink_kernel_cfg cfg = { 
         .input  = tmcc_rcv_skb,
     };  
 
     multi_nl_sk = netlink_kernel_create(&init_net, MULTI_NL, &cfg);
-    */
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0)
     multi_nl_sk = netlink_kernel_create(&init_net, MULTI_NL, 0, tmcc_rcv_skb, NULL, THIS_MODULE);
 #elif LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18) 
     multi_nl_sk = netlink_kernel_create(MULTI_NL, 0, tmcc_rcv_sock, THIS_MODULE);
diff --git a/multicast_kernel/multi_client/tools/multi_client_control/base_config.c b/multicast_kernel/multi_client/tools/multi_client_control/base_config.c
index db243b1..bf9a894 100644
--- a/multicast_kernel/multi_client/tools/multi_client_control/base_config.c
+++ b/multicast_kernel/multi_client/tools/multi_client_control/base_config.c
@@ -41,7 +41,7 @@ int nf_file_unlock(int fd)
 
     ret = flock(fd, LOCK_UN); 
     close(fd); 
-    return 0; 
+    return ret; 
 }                           
 
 int n_json_del_element_from_array_by_idx( struct json_object * obj, int idx )
diff --git a/multicast_kernel/multi_client/tools/multi_config_control/base_config.c b/multicast_kernel/multi_client/tools/multi_config_control/base_config.c
index db243b1..bf9a894 100644
--- a/multicast_kernel/multi_client/tools/multi_config_control/base_config.c
+++ b/multicast_kernel/multi_client/tools/multi_config_control/base_config.c
@@ -41,7 +41,7 @@ int nf_file_unlock(int fd)
 
     ret = flock(fd, LOCK_UN); 
     close(fd); 
-    return 0; 
+    return ret; 
 }                           
 
 int n_json_del_element_from_array_by_idx( struct json_object * obj, int idx )
diff --git a/multicast_kernel/multi_server/kmod/multis_nf.c b/multicast_kernel/multi_server/kmod/multis_nf.c
index 656c987..bcc3f77 100755
--- a/multicast_kernel/multi_server/kmod/multis_nf.c
+++ b/multicast_kernel/multi_server/kmod/multis_nf.c
@@ -38,11 +38,13 @@ static inline bool ipv4_is_multicast(__be32 addr)
 #endif
 
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
-unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff **pskb, 
+static unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff **pskb, 
    const struct net_device *in,const struct net_device *out, int (*okfn)(struct sk_buff *))
+#elif  LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
+static unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff *skb, 
+   const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
 #else
-unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff *skb, 
-   const struct net_device *in,const struct net_device *out, int (*okfn)(struct sk_buff *))
+static unsigned int tmcs_hook_local_out(void *priv, struct sk_buff *skb, const struct nf_hook_state *state)
 #endif
 {
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
@@ -124,8 +126,10 @@ unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff *skb,
         //reroute because of dnat
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
         if(ip_route_me_harder(&new_skb) != 0){
-#else
+#elif LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
         if(ip_route_me_harder(new_skb, RTN_UNSPEC) != 0){
+#else
+        if(ip_route_me_harder(&init_net, new_skb, RTN_UNSPEC) != 0){
 #endif
             kfree_skb(new_skb);
             route_fail_drop_count++;
@@ -134,8 +138,10 @@ unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff *skb,
 	
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
         skb->dst->output(new_skb);
-#else
+#elif  LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
         ip_local_out(new_skb);
+#else
+        ip_local_out(&init_net, new_skb->sk, new_skb);
 #endif
 
         //statistic
@@ -150,7 +156,9 @@ unsigned int tmcs_hook_local_out(unsigned int hook, struct sk_buff *skb,
 static struct nf_hook_ops multi_ops[] __read_mostly = {
     {
         .hook           = tmcs_hook_local_out,
+#if  LINUX_VERSION_CODE <= KERNEL_VERSION(4,0,0)
         .owner          = THIS_MODULE,
+#endif
         .pf             = PF_INET,
 #if  LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
         .hooknum        = NF_IP_LOCAL_OUT,
diff --git a/multicast_kernel/multi_server/kmod/multis_nl.c b/multicast_kernel/multi_server/kmod/multis_nl.c
index af6dad0..9b97734 100755
--- a/multicast_kernel/multi_server/kmod/multis_nl.c
+++ b/multicast_kernel/multi_server/kmod/multis_nl.c
@@ -251,15 +251,16 @@ static void tmcc_rcv_sock(struct sock *sk, int len)
 int multi_nl_init(void)
 {
     /*netlink varies greatly in different kernel version, so in fact we only cover 2.6.32 and 3.10 kernel version.*/
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0)
-    /*
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,0,0)
+    
     struct netlink_kernel_cfg cfg = {
         .input  = tmcc_rcv_skb,
     };
 
     multi_nl_sk = netlink_kernel_create(&init_net, MULTI_NL, &cfg);
-    */
-    multi_nl_sk = netlink_kernel_create(&init_net, MULTI_NL, 0, tmcc_rcv_skb, NULL, THIS_MODULE);
+    
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,0,0)
+    //multi_nl_sk = netlink_kernel_create(&init_net, MULTI_NL, 0, tmcc_rcv_skb, NULL, THIS_MODULE);
 #elif LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,18)
     multi_nl_sk = netlink_kernel_create(MULTI_NL, 0, tmcc_rcv_sock, THIS_MODULE);
 #else
diff --git a/multicast_kernel/multi_server/tools/multi_config_control/base_config.c b/multicast_kernel/multi_server/tools/multi_config_control/base_config.c
index db243b1..bf9a894 100644
--- a/multicast_kernel/multi_server/tools/multi_config_control/base_config.c
+++ b/multicast_kernel/multi_server/tools/multi_config_control/base_config.c
@@ -41,7 +41,7 @@ int nf_file_unlock(int fd)
 
     ret = flock(fd, LOCK_UN); 
     close(fd); 
-    return 0; 
+    return ret; 
 }                           
 
 int n_json_del_element_from_array_by_idx( struct json_object * obj, int idx )
diff --git a/multicast_kernel/multi_server/tools/multi_server_control/base_config.c b/multicast_kernel/multi_server/tools/multi_server_control/base_config.c
index 2c566e1..f744adb 100644
--- a/multicast_kernel/multi_server/tools/multi_server_control/base_config.c
+++ b/multicast_kernel/multi_server/tools/multi_server_control/base_config.c
@@ -41,7 +41,7 @@ int nf_file_unlock(int fd)
 
     ret = flock(fd, LOCK_UN); 
     close(fd); 
-    return 0; 
+    return ret; 
 }                           
 
 int n_json_del_element_from_array_by_idx( struct json_object * obj, int idx )
